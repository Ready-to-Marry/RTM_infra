replicaCount: 1
revisionHistoryLimit: 2

image:
  repository: hyundooboo/rtm-user-service
  pullPolicy: IfNotPresent
  tag: "27"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}

securityContext: {}

service:
  type: ClusterIP
  port: 8081

ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
  hosts:
    - host: rtm.com
      paths:
        - path: /user
          pathType: Prefix
  tls: []

resources:
  requests:
    memory: "1Gi"
    cpu: "500m"
  limits:
    memory: "2Gi"
    cpu: "1"

livenessProbe:
  httpGet:
    path: /actuator/health
    port: 8081
  initialDelaySeconds: 60
  timeoutSeconds: 5
  periodSeconds: 10
  failureThreshold: 3
readinessProbe:
  httpGet:
    path: /actuator/health
    port: 8081
  initialDelaySeconds: 60
  timeoutSeconds: 5
  periodSeconds: 10
  failureThreshold: 3

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

volumes: []
volumeMounts: []

nodeSelector: {}

tolerations: []

affinity: {}

secrets:
  db:
    secretRef: rtm-user-service-secret  # sealed-secret.yaml에 정의된 SealedSecret의 이름

# Spring Boot 애플리케이션 설정
env:
  - name: SPRING_APPLICATION_NAME
    value: user-service

  # Eureka 설정
  - name: EUREKA_CLIENT_SERVICEURL_DEFAULTZONE
    value: http://eureka-server.eureka.svc.cluster.local:8761/eureka

  - name: EUREKA_CLIENT_REGISTER_WITH_EUREKA
    value: "true"

  - name: EUREKA_CLIENT_FETCH_REGISTRY
    value: "true"

  - name: EUREKA_INSTANCE_PREFER_IP_ADDRESS
    value: "true"